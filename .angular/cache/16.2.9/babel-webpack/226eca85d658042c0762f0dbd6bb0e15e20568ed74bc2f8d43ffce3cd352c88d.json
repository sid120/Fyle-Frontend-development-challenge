{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getUser(githubUsername) {\n    return this.httpClient.get(`https://api.github.com/users/${githubUsername}`);\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ApiService","constructor","httpClient","getUser","githubUsername","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["E:\\VIIT\\CL\\fyle-internship-challenge-23\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { tap, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) { }\r\n\r\n  getUser(githubUsername: string) {\r\n    return this.httpClient.get(`https://api.github.com/users/${githubUsername}`);\r\n  }\r\n\r\n  // implement getRepos method by referring to the documentation. Add proper types for the return type and params \r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,UAAU;EAErBC,YACUC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAChB;EAEJC,OAAOA,CAACC,cAAsB;IAC5B,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAC,gCAAgCD,cAAc,EAAE,CAAC;EAC9E;EAAC,QAAAE,CAAA,G;qBARUN,UAAU,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVX,UAAU;IAAAY,OAAA,EAAVZ,UAAU,CAAAa,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}